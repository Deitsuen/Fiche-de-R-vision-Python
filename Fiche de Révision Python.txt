----------------------------------------------------------------------------------------
# Author: Adam Bouadil "Deitsuen" <adamb27750@orange.fr> all rights reserved
----------------------------------------------------------------------------------------


------------------------------------Définitions---------------------------------------
Print "Sert à afficher un phrase à l'exception que celle ci sois dans des guillemets"

# Sert à commenter le code sans que cela interviennent sur celui ci

"+" Sert à additioner, "-" Sert à soustraire, "/" Sert à divisé, "*" Sert à multiplier
"%" Pourcent, "<" Moins que, "<=" l'égale de inférieur, ">=" égal de supérieur

------------------------------Crée une Variable---------------------------------------

J'écris un mot j'écris égal avec un chiffre ou un mot dedans ou une autre variable dedans ou même
des phrases

Voiture = 100 

---------Inclure les variables dans des phrases----------------

Il y a 2 manière de montrer d'inclure des variables dans une phrase

Manière 1 : print "Il y a plus de", Voiture, " voiture dans l'entrepot."

Manière 2 : print "Il y a plus de %d voiture dans l'entrepot." % Voiture

(La manière 2 est plus simple à utiliser et permet de mettre plus facilement un nombre élevé de 
variable)

Exemple :

Voiture = 100

entrepot= l'entrepot

print "Il y a plus de %d voiture dans %d." % (Voiture, entrepot)

sa montrera le résultat après le égale donc 100 et l'entrepot

Il y a plus de 100 voiture dans l'entrepot.

--------------------------------Print des variables et les additioné entre elle -------------------
On peut aussi print des variables avec des phrases dedans ce qui affichera la phrase
ou additioné plusieur variable pour constituer des phrase ou autres

et si l'ont fait

1 = "Bonjour"

2 = "comment va tu."

et qu'on additione

print 1+2

sa affichera 

Bonjour comment va tu . 

-----------------------------Afficher plusieur fois dans une phrase-----------------------------
On peut aussi afficher plusieur fois la même chose dans un phrase avec le code suivant 

Print "!" * 10 

ce qui affichera 

!!!!!!!!!!

----------------------Prédéfinir le nombre de chose qu'on peut mettre dans une phrase------------------------------- 

Pour prédéfinir le nombre de chose affichable sur une phrase on fait une variable qui est égale au
à d'autre variable qui définiront combien de variable peut on mettre dans une phrase

en gros tu fait sa 

format = %r %r %r %r

et pour crée la phrase qui aura les paramètre prédéfini on fait 

print formatter % ("Un", "Deux", "Trois", "Quatre") on peut bien evidemment mettre des chiffre à 

la différence qu'il ne sera pas nécéssaire de mettre de guillemet car sa considère les chiffre
appart entre eux et non mélanger comme dans une phrase 

Exemple: print format % (1, 2, 3, 4)

----------------Utiliser des phrase et des variables,l'espacement et les newline---------------------

On va crée une variable qui va contenir une phrase ou quelque chose qui complète une phrase

Jour = "lundi mardi mercredi jeudi vendredi samedi dimanche"

et on va print la chose suivant 

print "Voici les jour de la semaine:", Jour

ce qui affichera: Voici les jour de la semaine lundi mardi mercredi jeudi vendredi samedi dimanche

Maintenant je vais te montrer comment faire quelque chose de plus "listé" 

on va reprendre nos jours donc

Jour = "lundi mardi mercredi jeudi vendredi"  

Sauf qu'on va rajouter "\n" entre chaque jour ce qui va donner

Jour = "lundi\nmardi\nmercredi\njeudi\nvendredi\nsamedi\ndimanche"

et normalement si vous associez la variable jour avec la modification suivante cela donnera 

Exemple

print "Voici les jours de la semaine:", Jour

Voici les jours de la semaine: lundi

mardi

mercredi

jeudi

vendredi

samedi

dimanche

Le "\n" met à la ligne automatiquement tous ce qui est après lui c'est pour ça que lundi n'est pas
à la ligne mais que les autres jours si

------------------Mettre des guillemets simple ou double dans une chaine simple ou double---------

Parfois il arrive de vouloir mettre une double guillement dans une chaine double mais sa pose
problème car python ne s'est plus qu'elle chaine est laquelle exemple

print "Aimerai tu "avoir" une glace" python va considérez "avoir" comme une chaine et sa fera
une error alors pour règlez se problème il faut faire ceci

"Aimerai tu \"avoir\" une glace" et pour les chaines à simple guillemets on fait la même chose avec
les guillemets simple Exemple : 'Aimerai tu \'avoir\' une glace'

Et si tu te pose la question peut ont mettre dans une phrase une guillement simple dans une chaine 
double et une guillemet double dans une chaine simple oui car les chaine sont différente de la 
guillemets mise 

------------------------crée des chaines espacés et crée des phrase espacés--------------------------

Pour crée une chaine espacés il faut faire cela Exemple :

print """ 
Ceci est espacés du reste du script
"""

ET NON CELA EXEMPLE: print """Ceci est espacés"""


Pour les phrases espacés il faut faire ceci 

Exemple: print "C'est\tbeau\tle\tsoleil

ce qui donnera  

C'est    beau    le    soleil 

On peut le faire aussi en début de phrase pour faire des phrases décalés 

Exemple print "\tTrop bon ce chocolat"
Ce qui donnera

    Trop bon ce chocolat

\t permet de faire un d'espacés tous ce qui est derrière lui

c'est pour ça que le "C'est" de 

C'est    beau    le    soleil 

n'est pas espacés 

est pareil pour le "bon ce chocolat"

de Trop bon ce chocolat

---------------------------------------------------Crée des questions----------------------------------------------------------

Pour crée des questions il faut faire ceci

print "Quel age à tu ?"
age = raw_input()         à noter que le nom de la variable peut changer selon vos gout
                          c'est juste plus simple de le mettre en rapport avec la question 
                          pour mieux s'y retrouver

A noter que une fois la réponse donner age = raw_input donnera la réponse donner 
c'est pour ça que "age = raw_input"  "raw_input" représente une variable qui varie selon la réponse 
donner 

exemple

print "Quel age à tu ?"
age = raw_input()

qui me posera la question suivant 

Quel age à tu
| 

en me donnant la possibilité d'écrire la réponse

Si je répond 17

lors d'une phrase qui veut utiliser les variable des question dans l'exemple la variable "age"

celle ci donnera 17

Ceci est important pour la suite


--------------------------Inclure des réponse de question dans une phrase---------------------------

Pour cela  crée en premier une question 

print " quel taille fait tu"
hauteur = raw_input()

print "tu fait %s en taille" % hauteur

ce qui donnera  

tu fait 177 en taille

--------------------------------d'autre manière de poser des questions--------------------------

Pour poser des questions plus rapidement sans utiliser le "print"

Il faut faire cela 

hauteur= raw_input("Quel taille fait tu ?")



-----------------------------------Inclure des Arguments---------------------------------------------

pour inclure des arguments il faut faire ceci

Exemple:

from sys import argv               Alors il est obligatoire de mettre le "from sys import argv" 

script,variable1,variable2,variable3 = argv        Sinon les variable  script, variable1, variable2, variable3 = argv 
                                                   ne marcheront pas
 print "ceci est le script", script                car le "from sys import argv" est une importation si  

print "ceci est le premier", variable1         l'importation n'est pas faite sa ne marchera pas 

print "ceci est le deuxième", variable2        A NOTER: Avant tous lancement de script avec argument

print "ceci est le troisième", variable3       il faut obligatoirement faire cela
                                             
                                               dans notre exemple  python nomduscript.py 123

                                               c'est important sinon votre script ne se lancera pas et 
                                                fera une erreur

                                                et lors du lancement du script sa vous affichera

ceci est le script nomduscript.py
ceci est le premier 1                           Les variable1,variable2,variable3 ont été remplacé
ceci est le deuxième 2                          lors du lancement du script par les argument qui ont                           
ceci est le troisième 3                         été écrit lors du lancement du script 
                                                "python nomduscript.py 123" 
      
                                                 mais la seul qui est semi-fixe est la variable script qui de plus est
                                                 OBLIGATOIRE pour tous script avec argument dedans
                                                 le seul moment on le nom de la variable script change
                                                 c'est quand vous changez de script et rien d'autre
                                                 
                                                 Pour ceux qui se posent la question oui on peut mettre des variables d'arguments
                                                 dans des phrases de la même façon que de mettre des variable normale mais il changeront
                                                 selon ce que vous mettez au lancement du script

----------------------------------------Mettre des variables dans des questions-----------------------------------------------

Pour faire cela il faut faire

Test =  "ou pense tu que cette une question ?"

Exemple : 

print "pense tu que c'est un exemple ?"
exemple = raw_input(Test)

ce qui affichera

Pense tu que c'est un exemple ?
ou pense tu que cette une question ? |             #(le "|" veut représenter la barre qui clignote qui vous permet d'écrire la réponse)


autre exemple avec un symbole

Test = '> '                        #(L'espace dans les guillemet permet d'espacés le symbole de la réponse sans espace sa marche aussi)

print "pense tu qu'il y a un symbole ici ?"
symbole = raw_input(Test)

ce qui affichera

pense tu qu'il y a un symbole ici ?
> |

#on peut aussi directement mettre un symbole dans le raw_input mais pas une phrase car sa transformerai le raw input en "question"

Bref 

Exemple:

print "Ceci est une phrase."
phrase = raw_input('> ')          

---------------------------------------------------Savoir lire des fichiers-----------------------------------------------------

Pour faire cela il faut obligatoirement crée un fichier avec des arguments donc pour se faire 

Exemple:

from sys import argv

script, filename = argv                           #(objet=descripteur de fichier tous ce qui permet de décrire un fichier Exemple: open)

txt = open(filename)                                #(On peut aussi crée des variable avec des objet python qui intéragissent avec les 
                                                     #fichier ce qui permet de faire interagir un fichier dans un autre)
#Et pour lire le fichier il faut faire ceci               

print txt.read()

Et lors du lancement du script il faudra mettre le nom du fichier à lire 

Exemple 

python exemple.py test.txt

Ceci est un test                      (Sa à afficher le fichier test.txt dans exemple.py on aurai pu aussi mettre un fichier .py ou 
                                      autre sa l'aurai aussi afficher de la même manière)

---------------------------------------------Savoir écrire dans un fichier ----------------------------------------------------
Pour écrire dans un fichier il faut faire cela

Exemple:

from sys import argv

script, filename = argv

ouverture = open(filename)

#maintenant on va écrire plusieur ligne 

ligne1 = raw_input("ligne1: ")
ligne2 = raw_input("ligne2: ")
ligne3 = raw_input("ligne3: ")

#sa affichera les questions les unes après les autres

ligne1: |
ligne2: |                            
ligne3: |

vous écrivez ensuite ceci:

ouverture.write(ligne1)
ouverture.write(ligne2)         #ce qui va permettre d'écrire les réponses que vous avez donné lors des questions dans le fichier cible 
ouverture.write(ligne3)         #configuré lors du lancement du script


#IMPORTANT si vous voulez mettre plusieur ligne  dans un texte ciblé je vous recommande
#de faire ceci

ouverture.write(ligne1)
ouverture.write("\n")
ouverture.write(ligne2)
ouverture.write("\n")
ouverture.write(ligne3)
ouverture.write("\n")

Cela va faire des espaces entre les lignes important si vous voulez écrire plusieur ligne espacés entre elle de façon "listé"

---------------------------------------------écrire le contenu d'un fichier à un autre-----------------------------------------

Pour faire cela il faut crée un script à argv

from sys import argv

script, from_file, to_file = argv        #from_file est le fichier "d'entrée"  to_file est le fichier de "sortie"

ouverture = open(from_file)
lecture = ouverture.read()

#La on a assigné l'objet "open" au fichier d'entrée "from_file" on a assigné l'objet "read" à sa variable "ouverture"
#on passe à la suite


open = open(to_file)          #Pour lancer le script il faut faire: python nomduscript.py fichier_d'entrée fichier_sortie
open.write(lecture)

#Ici on peut constater que l'objet "write" est utilisé pour écrire ce qui est contenue dans lecture

#sinon pour décrire "open" ouvre le fichier sortie(to_file) et open.write écris dans le fichier de sortie ce qui est contenue dans #la variable entre () dans l'exemple "lecture" donc lecture va ouvrir ce qui est contenue dans la variable "ouverture" et dans cette #variable il est contenue le fichier d'entrée (from_file)et l'objet "write" va écrire ce qui est contenue dans le fichier d'entrée au #fichier de sortie.

------------------------------------------------Crée des Fonctions--------------------------------------------------------------
#Pour crée des fonctions il faut faire ceci

#Ceci est l'équivalent des script avec "argv"
def Deux_args(*args):
    arg1, arg2 = args
print "argument1: %r , argument2: %r" % (arg1, arg2)

def Deux_args_encore(arg1, arg2) #Ici on determine combien il y aura d'argument dans la fonctions
    print"cette phrase contient l'argument %r et l'argument %r" %(arg1, arg2)
    
def Un_args(arg1) #Un seul argument
print"Il n'y qu'un seul argument c'est le %r" %(arg1)

def Zero_args() #Pas d'argument
print"il n'y a pas d'arguments ici"

print Deux_args(1,2)
print Deux_args_encore(1,2)
print Un_args(1)
print Zero_args()

#Ceci va print les phrases et remplacé les fonctions args1 et args 2 
#par ce que vous avec écrit entre les "()" 

# à NOTER qu'il nest pas nécéssaire d'écrire à chaque fois tous les arguments de déballage qui sont dans Deux_args
#On peut simplement écrire nos arguments comme dans Deux_args_encore

-----------------------------------------------Fonctions et Mathématique--------------------------------------------------------

def Test(test1, test2, test3, test4):
    print "Il fait %d ajourd'hui et il fera %d demain" % (test1, test2)
    print "tu a raison il fait %d ajourd'hui mais demain je pense qu'il fera %d" % (test3, test4)
    print "On verra ca demain"


print "Ceci est une utilisation de fonction dans des phrases"
Test(25, 20, 25, 19)

print "On peut aussi utiliser les variables de script"
exemple1 = 20
exemple2 = 15
exemple3 = 20
exemple4 = 30

Test(exemple1, exemple2, exemple3, exemple4)

print "on va maintenant faire des maths dans la fonction"
Test(10 + 15, 17 + 10, 10 + 15, 8 + 2 + 2 + 4 + 2 )

print "On va maintenant faire des maths avec nos variable et des chiffres)
Test(exemple1 + 15, exemple2 + 25, exemple3 + 15, exemple4 + 3)

------------------------------------------------Fonctions et Fichiers-------------------------------------------------------------------

On va apprendre à utiliser des fonctions pour manipuler des fichiers pour cela

Exemple:

from sys import argv
script, input_file = argv

def print_all(f)        # le "print_all" va afficher en intégralité le input_file"
    print f.read()

def rewind(f)           # Le "rewind" va remettre à zéro le listing(défilement) des lignes dans le script"
    f.seek(0)
    
def print_a_line(line_count, f):     # le "print_a_line" va print un numéro sur une ligne et va l'afficher important d'utiliser un
    print line_count, f.readline()     # un "rewind" avant l'utilisation du "print_a_line" si vous voulez numéroté vos lignes
    
Ouverture = open (input_file)    # On crée une variable pour ouvrir notre "input_file"

print "On va print l'ensemble du fichier"

print_all(input_file)

print "On remet à zéro le listing"    

rewind(input_file)

print "Maintenant on va numéroté trois lignes"

Numérotation = 1                            # Ici on crée un variable qui est égal à 1
print_a_line(current_line, Ouverture)    # Ici ça va numéroter la ligne selon le listing avec le numéro de la variable "Numérotation"

Numérotation = Numérotation + 1           # Pour faire simple Numérotation = 1   donc 1 + 1 = 2
print_a_line(current_line, Ouverture)   # Donc la numérotation de cette ligne sera 2

Numérotation = Numérotation + 1           # Du au précédente addition la variable "Numérotation" est égal à 2 donc 2 + 1 = 3
print_a_line(current_line, Ouverture)   #  Et ici la numérotation sera 3


#Et pour lancer le script il faut faire "python nom_du_script.py nom_du_fichier_cible.py" sinon sa ne marchera pas
    
-------------------------------Fonction et la commande "return"-------------------------------------------------------------

def add(a, b):
    print"ADDITIONER %d + %d" % (a, b)  #Alors ici sa va print "ADDITIONER" lors d'une addition avec a + b
    return a + b                        # On a la commande "return" qui elle va retourner a l'addition de a+b d'en haut
                                        # lors du lancement du script avec add/subtract/etc 
def subtract(a, b):                     # python remplacera a + b / a - b /etc par les chiffre demander
 print "SOUSTRAIRE %d - %d" % (a, b)    # pour afficher un résultat de "add" il faut faire ceci "résultat = add (1, 3)"
    return a - b                        # et inclure la variable "résultat" dans une phrase   
                                        # EXEMPLE
def multiply(a, b):                     # add (2, 4)    ce qui affichera:  ADDITIONER 2 + 4
    print"MULTIPLIER %d * %d" % (a, b)  # résultat = add (1, 3)     ce qui affichera: ADDITIONER 1+3
    return a * b                        # print "J'ai %d ans" % résultat
                                        # ce qui affichera: J'ai 4 ans
def divide(a, b):
    print "DIVISE %d / %d" % (a, b)
    return a / b


print "on va faire du calcul avec les fonctions"

age = add(10, 7)#Alors ici sa va juste afficher les addition et soustraction etc
taille = subtract (354, 177)# avec les chiffre qu'on a mis entre paranthese
poids = multiply (40, 2)#sa va pas nous afficher directement les reponse
pointure = divide(84, 2)

print "Age: %d, Taille: %d, Poids %d, Pointure %d" %(age, taille, poids, pointure)
#Mais par exemple dans la phrase ci dessus mettre les variable de script ci dessus dans la
#phrase va afficher les resultat directement plutot que les  addition et soustraction etc
# a faire
print "Un puzzle ??"

what = add(age, subtract(taille, multiply(poids, divide(pointure, 2))))
print "normalement le resultat est",what, "appart si vous avez modifier ;)"


#SOLUCE deja sa va afficher la variable a l'enver sa va commence par le divide

#pour finir par le add important pour la suite, alors on prend le resultat de la

#division donc ici 21 sachant que sa a deja divise de base  et sa redivise le resultat obtenue

#et on va le multiplier le 21 et le resultat de la multiplication

#va etre soustrait et ensuite ce resultat va etre additione et on obtient le resultat

#de cette variable biensur le tous reprend ce que vous avec marque sur les variable

# age,taille,poids,pointure sa peut radicalement changer selon ce que vous mettez


----------------------------------------------Formule de Calcul-----------------------------------------------------------------

print "c'est parti !"

print "J'ai envie d\'aller a\ttokyo j'aime bien\n la facon \\ de vivre la bas"
#La rien de bien compliquer c'est vers la fin du script que sa va etre interessant
Para = """
Aime\ttu\tle\tchocolat\t?
Moi j'aime bien le chocolat c'est bon on peut le manger de tellement de maniere \nDIFERRENTE AVEC TELLEMENT DE VARIATION
que j'adore sa !!!
"""

print"--------------------------"
print Para
print"--------------------------"


five = 8 - 3

print " cela devrait etre cinq: %s" % five

def formule_de_calcul(debut):  #Ici on fait une formule de calcul qu'on va appliquer au phrase suivante
    haricots = debut * 500   # "*" veut dire multiplier
    noisette = haricots / 1000 # "/" veut dire diviser
    noix = noisette / 100
    return haricots, noisette, noix

nombre_de_depart = 10000 # ici on remplace "debut" par nombre_de_depart qui est egal au chiffre 10000
haricots, noisette, noix = formule_de_calcul(nombre_de_depart)

#c'est apres avoir remplace "debut" par nombre_de_depart que la formule prend du sens

print "le nombre de depart est %d" % nombre_de_depart
print " on a %d d'haricots, %d de noisette et %d de noix " % (haricots, noisette,noix)

nombre_de_depart = nombre_de_depart / 10 # la on divise nombre_de_depart par 10
#et vu que nombre_de_depart est egal a 10000 on fait 10000/10 ce qui donnera un resultat moindre
print"on peut egalement faire comme cela:"
print " on a %d d'haricots, %d de noisette et %d de noix " % formule_de_calcul(nombre_de_depart)
# on met notre formule de calcul avec notre nombre_de_depart qui a ete divise par 10 donc sa donnera
# nous donnera des resultat moindre car si on met haricots,noisette,etc le resultat est fixe
-----------------------------------------Gestionnaire de phrase-----------------------------------------------------------------

def casseur_mot(stuff):
    """ cette fonction segmente les mots """
    mot = stuff.split(' ')
    return mot

def trieur_mot(mot):
    """ trie les mots """
    return sorted(mot)

def print_premier_mot(mot):
    """ print le premier mot apres le popping off """
    mot = mot.pop(0)
    print mot

def print_dernier_mot(mot):
    """ print le denier mot apres le popping off """
    mot = mot.pop(-1)
    print mot

def trieur_phrase(phrase):
    """ Segmente une phrase et renvoie les mots trier """
    mot = casseur_mot(phrase)
    return trieur_mot(mot)

def print_premier_dernier_mot(phrase):
    """print le premier et le dernier mot de la phrase"""
    mot = casseur_mot(phrase)
    print_premier_mot(mot)
    print_dernier_mot(mot)

def print_premier_dernier_mot_trier(phrase):
    """ trie les mots et imprime le premier et le denier"""
    mot = trieur_phrase(phrase)
    print_premier_mot(mot)
    print_dernier_mot(mot)
    
#Pour activer ce script il faudra passer par le terminal et tapez la chose suivante: python 
#Ce qui normalement vous affichera ça 

#drend@drend:~/PycharmProjects/untitled$ python
#Python 2.7.9 (default, Aug 13 2016, 16:41:35) 
#[GCC 4.9.2] on linux2
#Type "help", "copyright", "credits" or "license" for more information.
#>>>
#Lorsque s'affiche ça veuillez faire les indications suivante
#A noter que le résultat sera different en fonction de la phrase que vous mettez

#Les """ sont pour eviter de faire 1 milliard de '#' sur chaque ligne vous mettez 3 guillemet au debut/fin du paragraphe     #et c'est bon
"""
drend@drend:~/PycharmProjects/untitled$ python
Python 2.7.9 (default, Aug 13 2016, 16:41:35) 
[GCC 4.9.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import ex24
>>> phrase = "Nous pouvons tous y arriver tant que le coeur et la volonte y sont"
>>> mot = ex24.casseur_mot(phrase)
>>> mot
['Nous', 'pouvons', 'tous', 'y', 'arriver', 'tant', 'que', 'le', 'coeur', 'et', 'la', 'volonte', 'y', 'sont']
>>> mot_trier = ex24.trieur_mot(mot)
>>> mot_trier
['Nous', 'arriver', 'coeur', 'et', 'la', 'le', 'pouvons', 'que', 'sont', 'tant', 'tous', 'volonte', 'y', 'y']
>>> ex24.print_premier_mot(mot)
Nous
>>> ex24.print_dernier_mot(mot)
sont
>>> mot
['pouvons', 'tous', 'y', 'arriver', 'tant', 'que', 'le', 'coeur', 'et', 'la', 'volonte', 'y']
>>> ex24.print_premier_mot(mot_trier)
Nous
>>> ex24.print_dernier_mot(mot_trier)
y
>>> mot_trier
['arriver', 'coeur', 'et', 'la', 'le', 'pouvons', 'que', 'sont', 'tant', 'tous', 'volonte', 'y']
>>> mot_trier =ex24.trieur_phrase(phrase)
>>> mot_trier
['Nous', 'arriver', 'coeur', 'et', 'la', 'le', 'pouvons', 'que', 'sont', 'tant', 'tous', 'volonte', 'y', 'y']
>>> ex24.print_premier_dernier_mot(phrase)
Nous
sont
>>> ex24.print_premier_dernier_mot_trier(phrase)
Nous
y
>>>
"""

-----------------------------------------Question à choix multiple--------------------------------------------------------------

print "Vous rentrez dans une salle sombre et en face de vous s'y trouve deux porte tapes 1 ou 2 pour choisir l'une des portes"
porte = raw_input("> ")
#Ici ce sont des questions a choix multiple vous print une phrase et pour choisir des reponse vous faite
#EXEMPLE:

#print "vous avez le choix entre yaourt fraise ou yaourt chocolat que choississez vous ?"
#print "1.le yaourt fraise"
#print "2. le yaourt chocolat"
#yaourt = raw_input()

#La nous allons definir nos reponse et mettre les phrase en consequence a ce choix

#if yaourt == "1"
# 'if' veut dire 'si' donc en francais sa donne 'si yaourt == 1' dont d'ailleur 'yaourt' et le raw_input donc le choix donne a #l'utilisateur
#donc EN GROS TRADUCTION if = si, yaourt = raw_input(choix), "si choix == "1" print "tel et tel phrase"

#print "vous aviez oubliez que vous detestiez la fraise vous haissez ce moment de plaisir et decidez"
#print "d'aller bruler tous les fraisier du monde"
#print "FIN"

# elif yaourt == "2"   'elif' = sinon si
#print "trop bon ce yaourt vous avez kiffe votre moment gouter et decidez de repandre le bohnneur dans le monde"
#print "via des yaourt au chocolat le monde entier en mange les guerre s'arrete et tous le monde vie en harmonie
#print "FIN"


if porte == "1":
   print " vous voyez un demon qui delecte du vin qui emane des cris de douleurs"
   print "1. vous lui prenez son verre de vin et le balance par terre"
   print "2. vous passez discretement par la trappe qui emane de la lumiere a droite de la salle"

   bear = raw_input("> ")

   if bear == "1":
       print "Vous avez reussi a prendre des mains du demon le verre et a le balancez par terre mais il ne se brise pas"
       print "le demon s'arme de sa masse qui etait a droite de son trone et vous fracasse le crane "
       print "FIN"

   elif bear == "2":
       print "vous reusissez a vous enfuir par la trappe mais le demon a failli vous attrapez de peu vous ressortez et voyez"
       print "un monde fantastique et vous remarquez que vous etiez dans un donjon vous allez dans la ville la plus proche"
       print "et demandez un boulot a l'aubergiste vous y allez et tombez sur 1 tonne de diamant vous finissez RICHE"
       print "FIN"
   else:
       print " Vous etes paralyse de peur le demon vous remarque vous finissez vous jours en tant que esclave de ce demon"

       print "FIN"

elif porte == "2":
    print "vous tombez sur une grande salle au bout de cette salle vous apercevez ce qui semble etre une ceremonie sacrificielle"
    print "1. vous apercevez une corde qui mene a l'etage au dessus"
    print "2. vous trouvez une pierre de couleur violette qui brille d'un rouge intense"

    instinct = raw_input("> ")

    if instinct == "1" or instinct == "2":
        print "Les demon qui sacrifiai femme et enfant vous remarque et remarque votre collier autour du cou"
        print "ou il ai marque Satanas retro vade il crient l'elu vous prennent de force et vous pose sur une stelle a symbole etrange "
        print " il vous offre femme et or et font couler votre sang sur la stelle ce qui vous transforme en prince demon"
        print "avec votre nouvelle force vous decidez de sortir de cet endroit pour allez conquerir le monde"
        print "finalement vous reussisez a sortir des trefond de ce donjon avec votre armee des ternebre dont rien ne lui resiste"
        print "vous reussissez ce que vous avez entrepris en assiegeant toutes les capitale et endroit civilise du monde"
        print "vous etes devenu le dieu demon roi du monde "
        print "vous coulez dans l'or et dans les femmes"
        print "et puis un beau jour vous marchez dehors glissez sur une peau de banane et vous vous cassez la nuque"
        print "FIN"
    else:
        print " vous voyez une etrange grotte a droite de vous, vous empruntez la grote voyez de la lumiere qui en emane "
        print "vous tombez nez a nez avec une jeune femme perdu vous vous parlez et essayez de trouver une sortie ensemble"
        print "lors de la tentative d'evasion vous prouvez votre courage enver la jeune femme qui tombe sous votre charme"
        print "vous trouvez finalement la sortie et allez au village le plus proche vous finissez villageois de ce village et faite fortune"
        print "grace au recolte de votre ferme vous vous mariez et avec plein de sous "
        print "FIN"

--------------------------------------------Faire des boucles-------------------------------------------------------------------

le_compte = [1, 2, 3, 4, 5, 6]
gourmandise = ['Chocolat', 'Fraise', 'Vanille', 'Caramel']
voyage = [1, 'Shinjuku', 2, 'Akihabara', 3, 'Ginza']
#Ici on va faire des chaines en gros repeter une meme phrase jusqu'a un nombre defini
#Pour cree le premier element d'une boucle vous referencez a 'le_compte' , 'gourmandise' et enfin 'voyage'
for nombre in le_compte:
    print "Ceci est le compte %d" %nombre
    #Par la suite vous faite lenomdevotreboucle
    #EXEMPLE:  alphabet = [a,b,c,d], pour mettre le contenu de cette boucle dans une phrase il faut faire ceci
    # for lettre in alphabet:
    #     print "Ceci est la lettre %d" %lettre
    #------------CE QUI AFFICHERA--------------
    #Ceci est la lettre a
    #Ceci est la lettre b
    #Ceci est la lettre c
    #Ceci est la lettre d
    #A noter qu'une boucle a la limite que vous lui definissez si vous decider qu'elle s'arrete a 9000 elle ne s'arretera que   #a 9000 
    #Donc faite attention a ce que vous mettez ;)

for MIAM in gourmandise:
    print "Tellement de parfum %s !!!" %MIAM

for Japan in voyage:
    print "J'ai tellement hate de partir a ces destination %r" % Japan

elements = []

for heure in range (0, 7):
    print "Il est %d heure du matin" % heure
    elements.append(heure)

for sport in elements:
    print "%d pompe !!!" % sport

---------------------------------------------Faire des boucles à fin programmé--------------------------------------------------

numbers = []
i = 0

while i < 8:
    print "A son summum i fait %d" % i
    numbers.append(i)
#Alors ici on va utiliser 'while i < 8:' pour notre boucle car sa va nous permettre de print
#les meme phrase en boucle jusqu'a avoir depasser 8 au dessus la boucle s'arretera

    i = i + 1
    print "DES CHIFFRES MAINTENANT !!! :", numbers
    print "Des chiffre par ci par la Oh %d" %i
#Ici je vais vous expliquer comment on va proceder pour depasser 8 et ainsi stopper la boucle
# alors 'i = i + 1' en gros de base 'i' fait 0 si on lui rajoute '+1' il fait '1' donc a chaque
#fois que la boucle recommence 'i' fait est deja avec un numero au dessus de l'ancien
#EXEMPLE:
# i = 0

#while i < 8:
#i = i + 1
# print "Ceci est un test i fait %d" %i
# 1er tour de la boucle: Ceci est un test i fait 0
# 2eme tour : Ceci est un test i fait 1
# 3eme tour : Ceci est un test i fait 2
# et sa fait la meme chose avec une chaine si on fait la commande
#Chaine.append(i)

#EXEMPLE:
#Chaine = []
#Chaine.append(i)
# print "Ceci est une chaine:" , Chaine
#1er tour: Ceci est une chaine [0]
#2eme tour; Ceci est une chaine [0,1]
#3eme tour: Ceci est une chaine: [0,1,2]
#le .append permet de prendre ce qu'il y a  a l'interieur du contenue entre les parenthese
# la c'etait 'Chaine.append(i)
# et vu que 'i = i + 1'
#La chaine prend le contenue de l'evolution de i
#EN GROS la chaine evolue en meme temp que i



print "ENCORE DES CHIFFRES !?!?:"


for num in numbers:
    print num
    
-----------------------------------------Numérotation de chaine-----------------------------------------------------------------

animaux = ['leopard', 'tigre', 'lion', 'zebre', 'chat']
ours = animaux [0]
#Ici je vais vous expliquer l'importance des chiffre dans une chaine
#une chaine est constituer de numero et c'est numero sont attribuer a ce que vous mettez dedans
#Les numerotation des chaine suit la logique booleene et donc au lieu de commencer a 1 elle commence
# a 0
#EXEMPLE:
#Chaine =  ['Un', 'Deux', 'Trois', 'Quatre' , 'Cinq']
#Numerotation = Chaine [0]
#print Numerotation
#Si on lance le scripte sa nous donnera
#Un
#Sa nous a afficher Un car 0 est le chiffre avant les autres et non 1 car sa suit la logique booleene
print ours
print "le premier (1er) animal est a 0 est un leopard "
print "l'animal a 0 est le 1er et est un leopard"

--------------------------------------------------------------------------------------------------------------------------------
